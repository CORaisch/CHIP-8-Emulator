#+TITLE: CHIP-8 Emulator
#+TOC:nil

* TODOs:
** verify disassembler results
** implement opcode functionality
*** missing opcodes:
**** CLS
**** DRW Vx, Vy, nibble
**** SKP Vx
**** SKNP Vx
**** LD Vx, K
**** LD F, Vx
** implement graphics backend
*** implement a special class for graphics in its own file
*** use SDL2 codebase (e.g. ~/Projects/SDL2_Test/src/sdl2_window.cpp) as starting point
*** implement macro pixels s.t. small original 64x32 window can be easily zoomed
** implement sound backend
*** implement a special class for sound in its own file (even tho its just a beeper engine)
*** use SDL2 codebase (e.g. ~/Projects/SDL2_Test/src/sdl2_synthesizer.cpp) as starting point
*** normally one does not need to run it in a special thread, should already be managed by SDL2
** verify opcode functionality
** implement chip8 assembler for debugging purposes
*** missing functionality:
**** missing mnemonics:
***** LD
*** parser still doesn't work if the file ends on more then 1 whitespaces 
**** remove exceptions added last time and add check after loop, if 'tokensLine' is not empty and if 'tokensLine' is unequal to 'tokens.back()' -> then add 'tokensLine' to 'tokens'
*** add unit tests s.t. each command is tested once in all possible addressing ways
